"use strict";(self.webpackChunkcurvine_doc=self.webpackChunkcurvine_doc||[]).push([[2538],{6002:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Contribute/debugging-guide","title":"Debugging Guide","description":"This guide provides instructions for debugging Curvine components and troubleshooting common issues.","source":"@site/docs/6-Contribute/03-debugging-guide.md","sourceDirName":"6-Contribute","slug":"/Contribute/debugging-guide","permalink":"/docs/Contribute/debugging-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/curvineio/curvine-doc/edit/main/docs/6-Contribute/03-debugging-guide.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Benchmark Guide","permalink":"/docs/Contribute/benchmark-guide"},"next":{"title":"Curvine 2025 Roadmap","permalink":"/docs/Contribute/roadmap"}}');var l=s(4848),r=s(8453);const o={sidebar_position:3},t="Debugging Guide",c={},d=[{value:"Logging Configuration",id:"logging-configuration",level:2},{value:"Server Logging",id:"server-logging",level:3},{value:"Client Logging",id:"client-logging",level:3},{value:"Common Debugging Scenarios",id:"common-debugging-scenarios",level:2},{value:"Master/Worker Connection Issues",id:"masterworker-connection-issues",level:3},{value:"Performance Issues",id:"performance-issues",level:3},{value:"FUSE Mount Issues",id:"fuse-mount-issues",level:3},{value:"Debugging Tools",id:"debugging-tools",level:2},{value:"Built-in Tools",id:"built-in-tools",level:3},{value:"External Tools",id:"external-tools",level:3},{value:"Core Dump Analysis",id:"core-dump-analysis",level:2},{value:"Log Analysis",id:"log-analysis",level:2},{value:"Key Log Patterns",id:"key-log-patterns",level:3},{value:"Log Aggregation",id:"log-aggregation",level:3},{value:"Troubleshooting Checklist",id:"troubleshooting-checklist",level:2},{value:"Getting Help",id:"getting-help",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"debugging-guide",children:"Debugging Guide"})}),"\n",(0,l.jsx)(n.p,{children:"This guide provides instructions for debugging Curvine components and troubleshooting common issues."}),"\n",(0,l.jsx)(n.h2,{id:"logging-configuration",children:"Logging Configuration"}),"\n",(0,l.jsx)(n.h3,{id:"server-logging",children:"Server Logging"}),"\n",(0,l.jsxs)(n.p,{children:["Curvine uses structured logging with configurable levels. Configure logging in ",(0,l.jsx)(n.code,{children:"curvine.toml"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-toml",children:'[log]\nlevel = "info"  # trace, debug, info, warn, error\ndir = "/var/log/curvine"\nmax_size = "100MB"\nmax_files = 10\n'})}),"\n",(0,l.jsx)(n.h3,{id:"client-logging",children:"Client Logging"}),"\n",(0,l.jsx)(n.p,{children:"For client debugging, set the log level in client configuration:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-toml",children:'[client.log]\nlevel = "debug"\ndir = "/tmp/curvine-client"\n'})}),"\n",(0,l.jsx)(n.h2,{id:"common-debugging-scenarios",children:"Common Debugging Scenarios"}),"\n",(0,l.jsx)(n.h3,{id:"masterworker-connection-issues",children:"Master/Worker Connection Issues"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Check network connectivity"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"telnet <master-host> <master-port>\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Verify configuration"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Check ",(0,l.jsx)(n.code,{children:"master_addrs"})," in worker configuration"]}),"\n",(0,l.jsx)(n.li,{children:"Verify firewall settings"}),"\n",(0,l.jsx)(n.li,{children:"Check DNS resolution"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Review logs"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"tail -f /var/log/curvine/master.log\ntail -f /var/log/curvine/worker.log\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Monitor system resources"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"htop\niostat -x 1\nsar -n DEV 1\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Check Curvine metrics"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:9000/metrics  # Master metrics\ncurl http://localhost:9001/metrics  # Worker metrics\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Profile with perf"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"perf record -g ./curvine-server\nperf report\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fuse-mount-issues",children:"FUSE Mount Issues"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Check mount status"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"mount | grep curvine\nfusermount -u /mnt/curvine  # Unmount if needed\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Debug FUSE operations"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Enable FUSE debug logging\ncurvine-fuse -o debug /mnt/curvine\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Check permissions"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"ls -la /dev/fuse\ngroups $USER  # Check if user is in fuse group\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"debugging-tools",children:"Debugging Tools"}),"\n",(0,l.jsx)(n.h3,{id:"built-in-tools",children:"Built-in Tools"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"curvine-cli"}),": Command-line interface for cluster management"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"curvine-bench"}),": Performance testing and profiling"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Health checks"}),": Built-in health monitoring endpoints"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"external-tools",children:"External Tools"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"strace"}),": System call tracing"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"gdb"}),": Debugging with core dumps"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"valgrind"}),": Memory debugging"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"perf"}),": Performance profiling"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"core-dump-analysis",children:"Core Dump Analysis"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Enable core dumps"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"ulimit -c unlimited\necho '/tmp/core.%e.%p' > /proc/sys/kernel/core_pattern\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Analyze with gdb"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"gdb ./curvine-server /tmp/core.curvine-server.12345\n(gdb) bt\n(gdb) info registers\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"log-analysis",children:"Log Analysis"}),"\n",(0,l.jsx)(n.h3,{id:"key-log-patterns",children:"Key Log Patterns"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Connection errors"}),': Look for "connection refused" or "timeout"']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Memory issues"}),': Search for "out of memory" or "allocation failed"']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Disk errors"}),': Check for "I/O error" or "disk full"']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Performance"}),': Monitor "slow operation" warnings']}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"log-aggregation",children:"Log Aggregation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Collect logs from all nodes\nfor host in master worker1 worker2; do\n  scp $host:/var/log/curvine/*.log ./logs/$host/\ndone\n\n# Search across all logs\ngrep -r "ERROR" ./logs/\n'})}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting-checklist",children:"Troubleshooting Checklist"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"System Health"}),":"]}),"\n",(0,l.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Sufficient disk space"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Memory availability"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Network connectivity"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Process status"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Configuration"}),":"]}),"\n",(0,l.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Valid configuration files"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Correct network addresses"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Proper permissions"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Environment variables"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Logs"}),":"]}),"\n",(0,l.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","No critical errors"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Reasonable log levels"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Recent log entries"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Consistent timestamps"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Check the ",(0,l.jsx)(n.a,{href:"https://github.com/curvine/curvine/issues",children:"GitHub Issues"})]}),"\n",(0,l.jsx)(n.li,{children:"Review documentation and FAQ"}),"\n",(0,l.jsx)(n.li,{children:"Join the community discussions"}),"\n",(0,l.jsx)(n.li,{children:"Provide detailed logs and configuration when reporting issues"}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var i=s(6540);const l={},r=i.createContext(l);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);