"use strict";(self.webpackChunkcurvine_doc=self.webpackChunkcurvine_doc||[]).push([[1838],{6893:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"Contribute/development-guide","title":"Development Guide","description":"Project Layout","source":"@site/docs/6-Contribute/01-development-guide.md","sourceDirName":"6-Contribute","slug":"/Contribute/development-guide","permalink":"/docs/Contribute/development-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/curvineio/curvine-doc/edit/main/docs/6-Contribute/01-development-guide.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Contributor Guide","permalink":"/docs/category/contributor-guide"},"next":{"title":"Benchmark Guide","permalink":"/docs/Contribute/benchmark-guide"}}');var t=r(4848),o=r(8453);const s={sidebar_position:1},l="Development Guide",c={},u=[{value:"Project Layout",id:"project-layout",level:2},{value:"Development Setup",id:"development-setup",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Linux",id:"linux",level:3},{value:"Macos",id:"macos",level:3},{value:"Windows",id:"windows",level:3},{value:"Build &amp; Test",id:"build--test",level:2},{value:"Docker build",id:"docker-build",level:3},{value:"Debugging",id:"debugging",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"development-guide",children:"Development Guide"})}),"\n",(0,t.jsx)(n.h2,{id:"project-layout",children:"Project Layout"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:".\n\u251c\u2500\u2500 build\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 curvine-client\n\u251c\u2500\u2500 curvine-common\n\u251c\u2500\u2500 curvine-docker\n\u251c\u2500\u2500 curvine-fuse\n\u251c\u2500\u2500 curvine-libsdk\n\u251c\u2500\u2500 curvine-server\n\u251c\u2500\u2500 curvine-tests\n\u251c\u2500\u2500 curvine-ufs\n\u251c\u2500\u2500 curvine-web\n\u251c\u2500\u2500 etc\n\u251c\u2500\u2500 orpc\n\u251c\u2500\u2500 rustfmt.toml\n\u251c\u2500\u2500 target\n\u2514\u2500\u2500 testing\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Module Description"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"orpc"}),": High-performance network communication framework that supports asynchronous RPC calls, providing communication functionality for curvine-server and curvine-client."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"curvine-common"}),": Shared library containing protocol definitions, error handling, and common utilities, depended upon by multiple components."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"curvine-server"}),": Contains Master and Worker implementations, with Master managing Workers."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"curvine-client"}),": Provides APIs for interacting with the server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"curvine-fuse"}),": FUSE filesystem interface that allows Curvine to be mounted as a local filesystem."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"curvine-libsdk"}),": Supports multi-language access, including Java SDK and others."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"curvine-web"}),": Web management interface and API for server management."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"curvine-tests"}),": Testing framework and performance benchmarking tools for testing multiple components."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"curvine-ufs"}),": Unified filesystem interface supporting multiple underlying storage systems."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"development-setup",children:"Development Setup"}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rust toolchain"})," and ",(0,t.jsx)(n.code,{children:"protobuf"})," to build curvine core project; cargo < ",(0,t.jsx)(n.code,{children:"1.86.0"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"llvm"})," to build some dependency crate of curvine"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"linux",children:"Linux"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"# Step 1: Build base image\ndocker pull centos:8\ndocker run -itd --name shuttle-centos8-x86 \\\n-u root --privileged=true \\\n-v  /root/codespace/xuen/:/xuen  \\\ncentos:8 /bin/bash\n\n# Login to image\ndocker exec -it shuttle-centos8-x86 /bin/bash\n\n# Update repository mirrors\nsed -i -e \"s|mirrorlist=|#mirrorlist=|g\" /etc/yum.repos.d/CentOS-*\nsed -i -e \"s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g\" /etc/yum.repos.d/CentOS-*\n  \n# Install dependencies\nyum install fuse fuse3-devel\nyum install epel-release\nyum install ncurses-compat-libs\nyum groupinstall 'Development Tools'\nyum install wget\nyum install zip\n\n# Install Rust\nexport RUSTUP_UPDATE_ROOT=https://mirrors.aliyun.com/rustup/rustup\nexport RUSTUP_DIST_SERVER=https://mirrors.aliyun.com/rustup\ncurl --proto '=https' --tlsv1.2 -sSf https://mirrors.aliyun.com/repo/rust/rustup-init.sh | sh\n\n# Configure Aliyun Rust mirror\nvi ~/.cargo/config.toml\n\n[source.crates-io]\nreplace-with = 'aliyun'\n[source.aliyun]\nregistry = \"sparse+https://mirrors.aliyun.com/crates.io-index/\"\n\n# Install all dependencies in this directory\nmkdir /app \ncd /app\n\n# Install LLVM\nwget https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.1/clang+llvm-13.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz\ntar -xvf clang+llvm-13.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz \nmv clang+llvm-13.0.1-x86_64-linux-gnu-ubuntu-18.04 llvm\nrm -rf clang+llvm-13.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz\n\n# Set LLVM environment variables\nvi ~/.bash_profile \nPATH=$PATH:/app/llvm/bin\nexport LIBCLANG_PATH=/app/llvm/lib\nexport CPATH=$CPATH:/app/llvm/include\n\n# Check clang\nsource ~/.bash_profile \nclang --version\n\n# Install protobuf\nmkdir /app/protoc && cd /app/protoc \nwget https://github.com/protocolbuffers/protobuf/releases/download/v27.2/protoc-27.2-linux-x86_64.zip\nunzip protoc-27.2-linux-x86_64.zip\nrm -rf protoc-27.2-linux-x86_64.zip \n# Set environment variables\nvi ~/.bash_profile \n# Add to PATH: /app/protoc/bin\n\n# Install Java\nyum install java-1.8.0-openjdk-devel -y\n\n# Install Maven\ncd /app\nwget https://downloads.apache.org/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz\ntar -xvf apache-maven-3.8.8-bin.tar.gz\nmv apache-maven-3.8.8 maven\nrm -rf apache-maven-3.8.8-bin.tar.gz \n# Use Aliyun Maven mirror\nvi /app/maven/conf/settings.xml\n# Find <mirrors> tag and add Aliyun mirror configuration inside:\n<mirror>\n        <id>aliyunmaven</id>\n        <mirrorOf>central</mirrorOf>\n        <name>Aliyun Public Repository</name>\n        <url>https://maven.aliyun.com/repository/public</url>\n</mirror>\n\n# Set environment variables\nvi ~/.bash_profile \n# Add to PATH: /app/maven/bin\n\n# Install Node.js\nyum install -y nodejs\n# Use Aliyun mirror\nnpm config set registry https://registry.npmmirror.com\n"})}),"\n",(0,t.jsx)(n.h3,{id:"macos",children:"Macos"}),"\n",(0,t.jsx)(n.h3,{id:"windows",children:"Windows"}),"\n",(0,t.jsx)(n.h2,{id:"build--test",children:"Build & Test"}),"\n",(0,t.jsx)(n.h3,{id:"docker-build",children:"Docker build"}),"\n",(0,t.jsx)(n.h2,{id:"debugging",children:"Debugging"})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var i=r(6540);const t={},o=i.createContext(t);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);