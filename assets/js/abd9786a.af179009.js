"use strict";(self.webpackChunkcurvine_doc=self.webpackChunkcurvine_doc||[]).push([[4073],{5595:e=>{e.exports=JSON.parse('{"permalink":"/blog/welcome","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2025-05-29-welcome/index.md","source":"@site/blog/2025-05-29-welcome/index.md","title":"Curvine Caching now comming!","description":"Curbine is a high-performance distributed caching system implemented in Rust, designed for low-latency and high-throughput workloads with powerful data governance capabilities.","date":"2025-05-29T00:00:00.000Z","tags":[{"inline":false,"label":"teams","permalink":"/blog/tags/teams","description":"teams activities of curvine"}],"readingTime":0.13,"hasTruncateMarker":true,"authors":[{"name":"Barry","title":"Senior Engineer","url":"https://curvine.io","page":{"permalink":"/blog/authors/barry"},"socials":{"github":"https://github.com/lzjqsdd"},"imageURL":"https://infmax.top/img/author.png","key":"barry"},{"name":"David","title":"Founder of Curvine","url":"https://curvine.io","page":{"permalink":"/blog/authors/all-sebastien-lorber-articles"},"socials":{"github":"https://github.com/szbr9486"},"key":"david"}],"frontMatter":{"slug":"welcome","title":"Curvine Caching now comming!","authors":["barry","david"],"tags":["teams"]},"unlisted":false}')},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var r=n(6540);const a={},i=r.createContext(a);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},9557:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>u});var r=n(5595),a=n(4848),i=n(8453);const o={slug:"welcome",title:"Curvine Caching now comming!",authors:["barry","david"],tags:["teams"]},s=void 0,c={authorsImageUrls:[void 0,void 0]},u=[];function l(e){return(0,a.jsx)(a.Fragment,{})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l()}}}]);