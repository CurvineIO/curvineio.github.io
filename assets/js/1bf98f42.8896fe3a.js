"use strict";(self.webpackChunkcurvine_doc=self.webpackChunkcurvine_doc||[]).push([[6165],{7875:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"User-Manuals/csi","title":"CSI Driver","description":"To facilitate quick integration with Curvine in cloud-native environments, Curvine provides CSI driver support. Your Pod containers can access Curvine through PV (Persistent Volume) without requiring application modifications, enabling the use of Curvine\'s caching capabilities.","source":"@site/docs/3-User-Manuals/07-csi.md","sourceDirName":"3-User-Manuals","slug":"/User-Manuals/csi","permalink":"/docs/User-Manuals/csi","draft":false,"unlisted":false,"editUrl":"https://github.com/curvineio/curvine-doc/edit/main/docs/3-User-Manuals/07-csi.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Configuration Reference","permalink":"/docs/User-Manuals/conf"},"next":{"title":"Benchmark","permalink":"/docs/category/benchmark"}}');var s=i(4848),t=i(8453);const c={},a="CSI Driver",l={},o=[{value:"Deploy CSI",id:"deploy-csi",level:2},{value:"PVC+Static PV",id:"pvcstatic-pv",level:2},{value:"PVC+Dynamic PV",id:"pvcdynamic-pv",level:2},{value:"Creating a Pod",id:"creating-a-pod",level:2},{value:"Verification",id:"verification",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"csi-driver",children:"CSI Driver"})}),"\n",(0,s.jsxs)(n.p,{children:["To facilitate quick integration with Curvine in cloud-native environments, Curvine provides CSI driver support. Your Pod containers can access Curvine through ",(0,s.jsx)(n.code,{children:"PV"})," (Persistent Volume) without requiring application modifications, enabling the use of Curvine's caching capabilities."]}),"\n",(0,s.jsx)(n.p,{children:"The Curvine CSI driver follows the standard CSI specification and includes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CSI Controller"}),", deployed in ",(0,s.jsx)(n.code,{children:"Deployment"})," mode or ",(0,s.jsx)(n.code,{children:"Statefulset"})," mode"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CSI Node Plugin"}),", deployed in ",(0,s.jsx)(n.code,{children:"DaemonSet"})," mode"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Deployment scripts are located in the ",(0,s.jsx)(n.code,{children:"curvine-csi/deploy"})," directory. Execute:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl create -f curvine-csi/deploy\n"})}),"\n",(0,s.jsx)(n.p,{children:"After successful deployment, you will see the following pods:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"NAME                     READY   STATUS    RESTARTS   AGE\ncurvine-controller-0     4/4     Running   0          4h32m\ncurvine-csi-node-jbvmt   3/3     Running   0          4h32m\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"csi-arch",src:i(9556).A+"",width:"1674",height:"1024"})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"The Curvine CSI driver depends on fuse, which is established by the CSI node plugin. Since CSI driver upgrades will interrupt the fuse service, proceed with caution."})}),"\n",(0,s.jsx)(n.h2,{id:"deploy-csi",children:"Deploy CSI"}),"\n",(0,s.jsx)(n.p,{children:"First, deploy the CSI driver in the k8s cluster and ensure that the CSI node plugin is running properly."}),"\n",(0,s.jsx)(n.h2,{id:"pvcstatic-pv",children:"PVC+Static PV"}),"\n",(0,s.jsx)(n.p,{children:"You can manually create a static PV and bind the PVC to the static PV. Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'---\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: curvine-pv\n  labels:\n    type: curvine\nspec:\n  storageClassName: curvine-sc\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Delete\n  csi:\n    driver: curvine\n    volumeHandle: curvine-volume-1\n    volumeAttributes:\n      curvinePath: "/"\n      type: "Directory" # Using Directory type requires that the path must already exist\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.mdxAdmonitionTitle,{}),(0,s.jsx)(n.p,{children:"The following fields are required:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"volumeAttributes.curvinePath"})," must be ",(0,s.jsx)(n.code,{children:"/"}),", as currently Curvine fuse only supports mounting the root path"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"volumeAttributes.type"})," as ",(0,s.jsx)(n.code,{children:"Directory"})," indicates the path already exists. ",(0,s.jsx)(n.code,{children:"DirectoryOrCreate"})," indicates the path will be automatically created if it doesn't exist"]}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"pvcdynamic-pv",children:"PVC+Dynamic PV"}),"\n",(0,s.jsxs)(n.p,{children:["To use dynamic PV, you need to define a ",(0,s.jsx)(n.code,{children:"StorageClass"})," first."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"StorageClass"})," example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: curvine-sc\nprovisioner: curvine\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate\nallowVolumeExpansion: true\nparameters:\n  curvinePath: "/"\n  type: "DirectoryOrCreate" #"DirectoryOrCreate" or "Directory"\n'})}),"\n",(0,s.jsx)(n.p,{children:"PVC example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: curvine-pvc\nspec:\n  storageClassName: curvine-sc\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 5Gi\n"})}),"\n",(0,s.jsxs)(n.p,{children:["After creating the PVC, a PV will be automatically created with the status ",(0,s.jsx)(n.code,{children:"Bound"}),", as shown below:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ kubectl get pvc\nNAME          STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE\ncurvine-pvc   Bound    pvc-fce87a49-828f-43d2-8360-7901b0b5f886   5Gi        RWO            curvine-sc     <unset>                 16s\n"})}),"\n",(0,s.jsx)(n.h2,{id:"creating-a-pod",children:"Creating a Pod"}),"\n",(0,s.jsx)(n.p,{children:"Mount the Curvine volume to a pod. Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: curvine-csi-pod\n  labels:\n    app: curvine-csi-pod\nspec:\n  containers:\n    - name: web-server\n      image: nginx\n      ports:\n        - containerPort: 80\n          name: "http-server"\n      volumeMounts:\n        - mountPath: "/usr/share/nginx/html"\n          name: curvine-storage\n  volumes:\n    - name: curvine-storage\n      persistentVolumeClaim:\n        claimName: curvine-pvc\n'})}),"\n",(0,s.jsx)(n.h2,{id:"verification",children:"Verification"}),"\n",(0,s.jsxs)(n.p,{children:["On a cluster with Curvine running, you can manually create a file in the root path, such as 'index.html'. You can use the ",(0,s.jsx)(n.code,{children:"fuse"})," feature; by default, the fuse mounted by Curvine is at the ",(0,s.jsx)(n.code,{children:"/curvine-fuse"})," path."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ ls /curvine-fuse\nindex.html\n"})}),"\n",(0,s.jsx)(n.p,{children:"Check in the pod:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ kubectl exec curvine-test-pod -n default -- /usr/bin/cat /usr/share/nginx/html/index.html\n<html>\n        hello curvine csi\n</html>\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>a});var r=i(6540);const s={},t=r.createContext(s);function c(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:n},e.children)}},9556:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/csi-arch-38a126a40b84a3085e337742ee412d2a.png"}}]);