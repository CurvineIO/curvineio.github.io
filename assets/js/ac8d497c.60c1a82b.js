"use strict";(self.webpackChunkcurvine_doc=self.webpackChunkcurvine_doc||[]).push([[9660],{3954:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"User-Manuals/cli","title":"Command Line Tools","description":"This section introduces the command-line tools supported by Curvine and their usage methods.","source":"@site/docs/3-User-Manuals/04-cli.md","sourceDirName":"3-User-Manuals","slug":"/User-Manuals/cli","permalink":"/docs/User-Manuals/cli","draft":false,"unlisted":false,"editUrl":"https://github.com/curvineio/curvine-doc/edit/master/docs/3-User-Manuals/04-cli.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Cache","permalink":"/docs/User-Manuals/cache"},"next":{"title":"Performance Tuning","permalink":"/docs/User-Manuals/opt"}}');var i=s(4848),r=s(8453);const o={},c="Command Line Tools",d={},l=[{value:"Cluster Status Monitoring",id:"cluster-status-monitoring",level:2},{value:"HDFS-Compatible Commands",id:"hdfs-compatible-commands",level:2},{value:"POSIX Commands",id:"posix-commands",level:2},{value:"Rust Command Line Tool",id:"rust-command-line-tool",level:2},{value:"Mounting",id:"mounting",level:2},{value:"Unmount",id:"unmount",level:2},{value:"Load",id:"load",level:2},{value:"Load Status",id:"load-status",level:2}];function a(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"command-line-tools",children:"Command Line Tools"})}),"\n",(0,i.jsx)(n.p,{children:"This section introduces the command-line tools supported by Curvine and their usage methods."}),"\n",(0,i.jsx)(n.h2,{id:"cluster-status-monitoring",children:"Cluster Status Monitoring"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Command Format"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"bin/curvine report"}),(0,i.jsx)(n.td,{children:"Output cluster summary information"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"bin/curvine report capacity"}),(0,i.jsx)(n.td,{children:"Output cluster summary and detailed capacity information for each worker"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"bin/curvine report info"}),(0,i.jsx)(n.td,{children:"Output cluster and worker node information"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"hdfs-compatible-commands",children:"HDFS-Compatible Commands"}),"\n",(0,i.jsxs)(n.p,{children:["Curvine is compatible with the HDFS access protocol. You can execute operations that are fully compatible with the ",(0,i.jsx)(n.code,{children:"hdfs fs"})," command syntax through the ",(0,i.jsx)(n.code,{children:"bin/curvine fs"})," command, as shown in the following examples:"]}),"\n",(0,i.jsx)(n.p,{children:"Examples:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# List files and directories\nbin/curvine fs -ls /\n\n# Create directories\nbin/curvine fs -mkdir -p /dir/a\n"})}),"\n",(0,i.jsx)(n.p,{children:"Currently, Curvine and Hadoop are not 100% fully compatible. Some commands may not execute or have no effect. The following commands have passed rigorous testing:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Command"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ls"}),(0,i.jsx)(n.td,{children:"List directory contents"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"mkdir"}),(0,i.jsx)(n.td,{children:"Create directories"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"cat"}),(0,i.jsx)(n.td,{children:"View file contents"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"put"}),(0,i.jsx)(n.td,{children:"Upload files"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"get"}),(0,i.jsx)(n.td,{children:"Download files"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"count"}),(0,i.jsx)(n.td,{children:"Count files and directories"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"du"}),(0,i.jsx)(n.td,{children:"Calculate directory space usage"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"df"}),(0,i.jsx)(n.td,{children:"Show file system available space"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"mv"}),(0,i.jsx)(n.td,{children:"Rename/move files"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"stat"}),(0,i.jsx)(n.td,{children:"Query file/directory status"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"rm"}),(0,i.jsx)(n.td,{children:"Delete files or directories"})]})]})]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Commands not listed in the table do not necessarily mean they are unsupported, but rather that they have not undergone complete testing."})}),"\n",(0,i.jsx)(n.h2,{id:"posix-commands",children:"POSIX Commands"}),"\n",(0,i.jsx)(n.p,{children:"Curvine implements a POSIX-compliant FUSE (Filesystem in Userspace) interface. After mounting Curvine in Linux systems, users can interact through standard Linux file operation commands. This implementation has the following technical characteristics:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"System Compatibility:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Complies with FUSE 3.0 interface specifications and is compatible with FUSE 2.0"}),"\n",(0,i.jsx)(n.li,{children:"Compatible with mainstream file system operation semantics like ext4/xfs"}),"\n",(0,i.jsx)(n.li,{children:"Supports Linux kernel 3.10+ versions"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Functional Features:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Provides complete POSIX file operation interface"}),"\n",(0,i.jsx)(n.li,{children:"Supports atomic operation guarantees"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Command Line Operation Support:"}),"\nUsers can operate through the following core Linux commands:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Basic file operations\nls, cp, mv, rm, mkdir\n\n# File content operations\ncat, grep, sed, awk\n\n# File system management\ndf -h, du -sh, stat\n"})}),"\n",(0,i.jsx)(n.p,{children:"Curvine currently does not implement permission management. When executing the following permission-related commands:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"chmod   # Command executes but does not actually modify permission bits\nchown   # User/group change operations have no effect\ngetfacl # Cannot obtain valid ACL information\n"})}),"\n",(0,i.jsx)(n.h2,{id:"rust-command-line-tool",children:"Rust Command Line Tool"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"cv fs"})," is a Rust-implemented command-line tool compatible with hdfs fs commands. Currently supports ",(0,i.jsx)(n.code,{children:"ls"}),", ",(0,i.jsx)(n.code,{children:"mkdir"}),", and ",(0,i.jsx)(n.code,{children:"rename"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"bin/cv fs -ls curvine://x/y\n"})}),"\n",(0,i.jsx)(n.h2,{id:"mounting",children:"Mounting"}),"\n",(0,i.jsxs)(n.p,{children:["Currently supports the ",(0,i.jsx)(n.code,{children:"s3"}),".\nExample: Mount ",(0,i.jsx)(n.code,{children:"s3://testing"})," to ",(0,i.jsx)(n.code,{children:"/s3-testing"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"bin/cv mount s3://ai/xuen-test /s3 \\\n-c s3.endpoint_url=http://hostname.com \\\n-c s3.region_name=cn \\\n-c s3.credentials.access=access_key \\\n-c s3.credentials.secret=secret_key \\\n-c s3.path_style=true\n"})}),"\n",(0,i.jsx)(n.p,{children:"Check mount table"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"bin/cv monut-list\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"A unique UFS source can only mount to one curvine path."})}),"\n",(0,i.jsx)(n.h2,{id:"unmount",children:"Unmount"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"bin/cv umount /s3-testing/\n"})}),"\n",(0,i.jsx)(n.h2,{id:"load",children:"Load"}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"You should mount ufs source to curvine before using load."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"bin/curvine load s3://my-bucket/test.data\n"})}),"\n",(0,i.jsx)(n.p,{children:"load comond output will show jobid when success. you can using $jobid to check load status, see following load-status command."}),"\n",(0,i.jsx)(n.h2,{id:"load-status",children:"Load Status"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"bin/cv load-status $jobid\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);