"use strict";(self.webpackChunkcurvine_doc=self.webpackChunkcurvine_doc||[]).push([[4448],{777:e=>{e.exports=JSON.parse('{"permalink":"/blog/2025/09/28/user-guide","editUrl":"https://github.com/curvineio/curvine-doc/edit/main/blog/blog/2025-09-28-user-guide/index.md","source":"@site/blog/2025-09-28-user-guide/index.md","title":"Curvine Distributed Cache System User Guide","description":"Version","date":"2025-09-28T00:00:00.000Z","tags":[],"readingTime":11.53,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"nextItem":{"title":"Building a Curvine Cluster from Scratch & FIO Testing","permalink":"/blog/2025/08/08/fio-bench"}}')},1129:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/PluginWorkflow-d8cf7027cd68b74434060e68c06e4705.png"},3160:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/WorkingPrinciple-979779bc596e9fffaf9a3cf2406536c2.png"},3170:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});var i=s(777),a=s(4848),t=s(8453);const r={},c="Curvine Distributed Cache System User Guide",l={authorsImageUrls:[]},o=[{value:"\ud83d\udcda Table of Contents",id:"-table-of-contents",level:2},{value:"\ud83c\udfaf System Overview",id:"-system-overview",level:2},{value:"\ud83c\udfc6 Performance Advantages",id:"-performance-advantages",level:3},{value:"Core Components",id:"core-components",level:3},{value:"\ud83d\udcc2 Path Mount Management",id:"-path-mount-management",level:2},{value:"Mounting Modes Explained",id:"mounting-modes-explained",level:3},{value:"\ud83c\udfaf CST Mode (Consistent Path Mode)",id:"-cst-mode-consistent-path-mode",level:4},{value:"\ud83d\udd00 Arch Mode (Orchestration Mode)",id:"-arch-mode-orchestration-mode",level:4},{value:"Complete Mounting Example",id:"complete-mounting-example",level:3},{value:"Mounting Parameters Explained",id:"mounting-parameters-explained",level:3},{value:"Mount Point Management",id:"mount-point-management",level:3},{value:"\ud83d\udcbe Intelligent Caching Strategies",id:"-intelligent-caching-strategies",level:2},{value:"Active Data Preloading",id:"active-data-preloading",level:3},{value:"Automatic Caching Strategy",id:"automatic-caching-strategy",level:3},{value:"\u2728 Curvine Intelligent Cache Architecture",id:"-curvine-intelligent-cache-architecture",level:4},{value:"Core Advantage Comparison",id:"core-advantage-comparison",level:4},{value:"\ud83d\udd04 Data Consistency Guarantees",id:"-data-consistency-guarantees",level:2},{value:"Consistency Strategy Details",id:"consistency-strategy-details",level:3},{value:"1. \ud83d\udeab None Mode - Highest Performance",id:"1--none-mode---highest-performance",level:4},{value:"2. \u2705 Always Mode - Strong Consistency",id:"2--always-mode---strong-consistency",level:4},{value:"3. \ud83d\udd70\ufe0f Period Mode - Balanced Solution",id:"3-\ufe0f-period-mode---balanced-solution",level:4},{value:"Cache Performance Monitoring",id:"cache-performance-monitoring",level:3},{value:"\ud83e\udd16 AI/ML Scenario Applications",id:"-aiml-scenario-applications",level:2},{value:"Deep Learning Training Optimization",id:"deep-learning-training-optimization",level:3},{value:"Model Serving Scenarios",id:"model-serving-scenarios",level:3},{value:"\ud83d\udd17 POSIX Semantics and FUSE Access",id:"-posix-semantics-and-fuse-access",level:3},{value:"FUSE Usage in AI/ML Training",id:"fuse-usage-in-aiml-training",level:4},{value:"1. Deep Learning Training Data Access",id:"1-deep-learning-training-data-access",level:5},{value:"2. TensorFlow/Keras Data Pipeline",id:"2-tensorflowkeras-data-pipeline",level:5},{value:"\ud83d\uddc4\ufe0f Big Data Ecosystem Integration",id:"\ufe0f-big-data-ecosystem-integration",level:2},{value:"Hadoop Ecosystem Integration",id:"hadoop-ecosystem-integration",level:3},{value:"Basic Configuration",id:"basic-configuration",level:4},{value:"Multi-cluster Support",id:"multi-cluster-support",level:4},{value:"\ud83d\udd04 UFS Transparent Proxy",id:"-ufs-transparent-proxy",level:3},{value:"\u2728 Core Features of Transparent Proxy",id:"-core-features-of-transparent-proxy",level:4},{value:"\ud83d\udee0\ufe0f Configuration Method",id:"\ufe0f-configuration-method",level:4},{value:"\ud83d\udd27 Working Principle",id:"-working-principle",level:4},{value:"\ud83d\ude80 Usage Example",id:"-usage-example",level:4},{value:"Apache Spark Optimization Configuration",id:"apache-spark-optimization-configuration",level:3},{value:"Spark Code Example",id:"spark-code-example",level:4},{value:"Trino/Presto Plugin Integration",id:"trinopresto-plugin-integration",level:3},{value:"Plugin Workflow",id:"plugin-workflow",level:4},{value:"Flink Real-time Computing Integration",id:"flink-real-time-computing-integration",level:3},{value:"\ud83d\udca1 Best Practices",id:"-best-practices",level:2},{value:"\ud83c\udfaf Mounting Strategy Best Practices",id:"-mounting-strategy-best-practices",level:3},{value:"Tiered Mounting by Business Scenarios",id:"tiered-mounting-by-business-scenarios",level:4},{value:"Optimization by Data Type",id:"optimization-by-data-type",level:4},{value:"\ud83c\udfaf Summary",id:"-summary",level:2},{value:"\ud83c\udfc6 Core Values",id:"-core-values",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://github.com/curvine/curvine",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/badge/version-v1.0-blue.svg",alt:"Version"})}),"\n",(0,a.jsx)(n.a,{href:"https://www.apache.org/licenses/LICENSE-2.0",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/badge/license-Apache%202.0-green.svg",alt:"License"})}),"\n",(0,a.jsx)(n.a,{href:"https://docs.curvine.io",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/badge/docs-latest-brightgreen.svg",alt:"Documentation"})})]}),"\n",(0,a.jsx)(n.h2,{id:"-table-of-contents",children:"\ud83d\udcda Table of Contents"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#-system-overview",children:"\ud83c\udfaf System Overview"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#-path-mount-management",children:"\ud83d\udcc2 Path Mount Management"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#-intelligent-caching-strategies",children:"\ud83d\udcbe Intelligent Caching Strategies"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#-data-consistency-guarantees",children:"\ud83d\udd04 Data Consistency Guarantees"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#-aiml-scenario-applications",children:"\ud83e\udd16 AI/ML Scenario Applications"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#-big-data-ecosystem-integration",children:"\ud83d\uddc4\ufe0f Big Data Ecosystem Integration"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#-best-practices",children:"\ud83d\udca1 Best Practices"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#-summary",children:"\ud83c\udfaf Summary"})}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-system-overview",children:"\ud83c\udfaf System Overview"}),"\n",(0,a.jsx)(n.p,{children:"Curvine is a high-performance, cloud-native distributed caching system designed for modern data-intensive applications. It provides an intelligent caching layer between underlying storage (UFS) and compute engines, significantly improving data access performance."}),"\n",(0,a.jsx)(n.h3,{id:"-performance-advantages",children:"\ud83c\udfc6 Performance Advantages"}),"\n",(0,a.jsx)(n.p,{children:"Compared to traditional storage access methods, Curvine can provide:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Metric"}),(0,a.jsx)(n.th,{children:"Cloud Storage"}),(0,a.jsx)(n.th,{children:"Curvine Cache"}),(0,a.jsx)(n.th,{children:"Performance Improvement"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Read Latency"})}),(0,a.jsx)(n.td,{children:"100-500ms"}),(0,a.jsx)(n.td,{children:"1-10ms"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"10-50x"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Throughput"})}),(0,a.jsx)(n.td,{children:"100-500 MB/s"}),(0,a.jsx)(n.td,{children:"1-10 GB/s"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"10-20x"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"IOPS"})}),(0,a.jsx)(n.td,{children:"1K-10K"}),(0,a.jsx)(n.td,{children:"100K-1M"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"100x"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Concurrent Connections"})}),(0,a.jsx)(n.td,{children:"100-1K"}),(0,a.jsx)(n.td,{children:"10K-100K"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"100x"})})]})]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"core-components",children:"Core Components"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Master Cluster"}),": Metadata management, cache scheduling, consistency guarantees"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Worker Nodes"}),": Data caching, I/O processing, task execution"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Client SDK"}),": Multi-language clients, supporting Rust, Fuse, Java, Python"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Job Manager"}),": Distributed task scheduling and management"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Metrics System"}),": Real-time monitoring and performance analysis"]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-path-mount-management",children:"\ud83d\udcc2 Path Mount Management"}),"\n",(0,a.jsx)(n.p,{children:"Mounting is the first step in using Curvine cache, which establishes the mapping relationship between underlying storage (UFS) and cache paths."}),"\n",(0,a.jsx)(n.h3,{id:"mounting-modes-explained",children:"Mounting Modes Explained"}),"\n",(0,a.jsx)(n.p,{children:"Curvine supports two flexible mounting modes:"}),"\n",(0,a.jsx)(n.h4,{id:"-cst-mode-consistent-path-mode",children:"\ud83c\udfaf CST Mode (Consistent Path Mode)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Consistent path, easy to manage and maintain\nbin/cv mount s3://bucket/data /bucket/data --mnt-type cst\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Ideal scenarios"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Data lake scenarios with clear path structures"}),"\n",(0,a.jsx)(n.li,{children:"Production environments requiring intuitive path mapping"}),"\n",(0,a.jsx)(n.li,{children:"Data platforms with multi-team collaboration"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"-arch-mode-orchestration-mode",children:"\ud83d\udd00 Arch Mode (Orchestration Mode)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Flexible path mapping, supporting complex path transformations\nbin/cv mount s3://complex-bucket/deep/nested/path /simple/data --mnt-type arch\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Ideal scenarios"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Complex storage hierarchies"}),"\n",(0,a.jsx)(n.li,{children:"Scenarios requiring path abstraction"}),"\n",(0,a.jsx)(n.li,{children:"Multi-cloud storage unified access"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"complete-mounting-example",children:"Complete Mounting Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Mount S3 storage to Curvine (production-grade configuration)\nbin/cv mount \\\ns3://bucket/warehouse/tpch_500g.db/orders \\\n/bucket/warehouse/tpch_500g.db/orders \\\n--ttl-ms 24h \\\n--ttl-action delete \\\n--replicas 3 \\\n--block-size 128MB \\\n--consistency-strategy always \\\n--storage-type ssd \\\n-c s3.endpoint_url=https://s3.ap-southeast-1.amazonaws.com \\\n-c s3.credentials.access=access_key \\\n-c s3.credentials.secret=secret_key \\\n-c s3.region_name=ap-southeast-1 \n"})}),"\n",(0,a.jsx)(n.h3,{id:"mounting-parameters-explained",children:"Mounting Parameters Explained"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Default"}),(0,a.jsx)(n.th,{children:"Description"}),(0,a.jsx)(n.th,{children:"Example"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--ttl-ms"})}),(0,a.jsx)(n.td,{children:"duration"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"0"})}),(0,a.jsx)(n.td,{children:"Cache data expiration time"}),(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"24h"}),", ",(0,a.jsx)(n.code,{children:"7d"}),", ",(0,a.jsx)(n.code,{children:"30d"})]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--ttl-action"})}),(0,a.jsx)(n.td,{children:"enum"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"none"})}),(0,a.jsxs)(n.td,{children:["Expiration policy: ",(0,a.jsx)(n.code,{children:"delete"}),"/",(0,a.jsx)(n.code,{children:"none"})]}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"delete"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--replicas"})}),(0,a.jsx)(n.td,{children:"int"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"1"})}),(0,a.jsx)(n.td,{children:"Number of data replicas (1-5)"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"3"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--block-size"})}),(0,a.jsx)(n.td,{children:"size"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"128MB"})}),(0,a.jsx)(n.td,{children:"Cache block size"}),(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"64MB"}),", ",(0,a.jsx)(n.code,{children:"128MB"}),", ",(0,a.jsx)(n.code,{children:"256MB"})]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--consistency-strategy"})}),(0,a.jsx)(n.td,{children:"enum"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"always"})}),(0,a.jsx)(n.td,{children:"Consistency strategy"}),(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"none"}),"/",(0,a.jsx)(n.code,{children:"always"}),"/",(0,a.jsx)(n.code,{children:"period"})]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--storage-type"})}),(0,a.jsx)(n.td,{children:"enum"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"disk"})}),(0,a.jsx)(n.td,{children:"Storage medium type"}),(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"mem"}),"/",(0,a.jsx)(n.code,{children:"ssd"}),"/",(0,a.jsx)(n.code,{children:"disk"})]})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"mount-point-management",children:"Mount Point Management"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# View all mount points\nbin/cv mount\n\n# Unmount path\nbin/cv unmount /bucket/warehouse/tpch_500g.db/orders\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-intelligent-caching-strategies",children:"\ud83d\udcbe Intelligent Caching Strategies"}),"\n",(0,a.jsx)(n.p,{children:"Curvine provides multiple intelligent caching strategies, from passive response to active prediction, comprehensively optimizing data access performance."}),"\n",(0,a.jsx)(n.h3,{id:"active-data-preloading",children:"Active Data Preloading"}),"\n",(0,a.jsx)(n.p,{children:"Active loading allows you to warm up the cache before business peaks to ensure optimal performance:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Basic loading\nbin/cv load s3:/bucket/warehouse/critical-dataset\n\n# Synchronous loading with progress monitoring\nbin/cv load s3:/bucket/warehouse/critical-dataset -w\n\n"})}),"\n",(0,a.jsx)(n.h3,{id:"automatic-caching-strategy",children:"Automatic Caching Strategy"}),"\n",(0,a.jsx)(n.p,{children:"Curvine's automatic caching system has significant advantages over traditional solutions:"}),"\n",(0,a.jsx)(n.h4,{id:"-curvine-intelligent-cache-architecture",children:"\u2728 Curvine Intelligent Cache Architecture"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"curvine",src:s(6897).A+"",width:"539",height:"969"})}),"\n",(0,a.jsx)(n.h4,{id:"core-advantage-comparison",children:"Core Advantage Comparison"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Feature"}),(0,a.jsx)(n.th,{children:"Open Source Competitors"}),(0,a.jsx)(n.th,{children:"Curvine"}),(0,a.jsx)(n.th,{children:"Advantage Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Loading Granularity"})}),(0,a.jsx)(n.td,{children:"Block-level"}),(0,a.jsx)(n.td,{children:"File/Directory-level"}),(0,a.jsx)(n.td,{children:"Avoid fragmentation, ensure integrity"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Duplicate Processing"})}),(0,a.jsx)(n.td,{children:"Exists duplicate loading"}),(0,a.jsx)(n.td,{children:"Intelligent deduplication"}),(0,a.jsx)(n.td,{children:"Save bandwidth and storage resources"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Task Scheduling"})}),(0,a.jsx)(n.td,{children:"Simple queue"}),(0,a.jsx)(n.td,{children:"Distributed Job Manager"}),(0,a.jsx)(n.td,{children:"Efficient concurrency, load balancing"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Consistency Guarantee"})}),(0,a.jsx)(n.td,{children:"Passive checking"}),(0,a.jsx)(n.td,{children:"Active awareness"}),(0,a.jsx)(n.td,{children:"Real-time data synchronization"})]})]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-data-consistency-guarantees",children:"\ud83d\udd04 Data Consistency Guarantees"}),"\n",(0,a.jsx)(n.p,{children:"Data consistency is a core challenge for caching systems, and Curvine provides multi-level consistency guarantee mechanisms."}),"\n",(0,a.jsx)(n.h3,{id:"consistency-strategy-details",children:"Consistency Strategy Details"}),"\n",(0,a.jsx)(n.h4,{id:"1--none-mode---highest-performance",children:"1. \ud83d\udeab None Mode - Highest Performance"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"bin/cv mount s3://bucket/path /bucket/path --consistency-strategy=none\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Ideal scenarios"}),": Static data, archived data, read-only datasets"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Performance"}),": \u2b50\u2b50\u2b50\u2b50\u2b50 (fastest)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Consistency"}),": \u2b50\u2b50 (TTL-dependent)"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"2--always-mode---strong-consistency",children:"2. \u2705 Always Mode - Strong Consistency"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"bin/cv mount s3://bucket/path /bucket/path --consistency-strategy=always\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Ideal scenarios"}),": Frequently updated business data, critical business systems"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Performance"}),": \u2b50\u2b50\u2b50 (has overhead)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Consistency"}),": \u2b50\u2b50\u2b50\u2b50\u2b50 (strong consistency)"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"3-\ufe0f-period-mode---balanced-solution",children:"3. \ud83d\udd70\ufe0f Period Mode - Balanced Solution"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"bin/cv mount s3://bucket/path /bucket/path \\\n  --consistency-strategy=period \\\n  --check-interval=5m\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Ideal scenarios"}),": Data with predictable update frequency"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Performance"}),": \u2b50\u2b50\u2b50\u2b50 (good)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Consistency"}),": \u2b50\u2b50\u2b50\u2b50 (periodically guaranteed)"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"cache-performance-monitoring",children:"Cache Performance Monitoring"}),"\n",(0,a.jsx)(n.p,{children:"Monitoring cache hit ratio is an important way to evaluate the effectiveness of consistency strategies:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Get cache hit ratio\ncurl -s http://master:9001/metrics | grep -E "(cache_hits|cache_misses)"\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-prometheus",children:'client_mount_cache_hits{id="3108497238"} 823307\nclient_mount_cache_misses{id="3108497238"} 4380\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-aiml-scenario-applications",children:"\ud83e\udd16 AI/ML Scenario Applications"}),"\n",(0,a.jsx)(n.p,{children:"AI and machine learning workloads have extremely high requirements for storage performance, and Curvine provides specially optimized functions for this."}),"\n",(0,a.jsx)(n.h3,{id:"deep-learning-training-optimization",children:"Deep Learning Training Optimization"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Optimized data loading for GPU clusters\nbin/cv mount s3://datasets/imagenet /datasets/imagenet \\\n  --storage-type=mem \\\n  --block-size=1GB \\\n  --replicas=2 \n\n"})}),"\n",(0,a.jsx)(n.h3,{id:"model-serving-scenarios",children:"Model Serving Scenarios"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Model file caching (low-latency access)\nbin/cv mount s3://model/bert-large /models/bert-large \\\n  --storage-type=mem \\\n  --ttl-ms=none \\\n  --consistency-strategy=always \n\n# Inference data caching\nbin/cv mount s3://inference/input /inference/input \\\n  --storage-type=ssd \\\n  --ttl-ms=1h \\\n  --consistency-strategy=none \n"})}),"\n",(0,a.jsx)(n.h3,{id:"-posix-semantics-and-fuse-access",children:"\ud83d\udd17 POSIX Semantics and FUSE Access"}),"\n",(0,a.jsx)(n.p,{children:"Curvine perfectly supports POSIX semantics through the FUSE (Filesystem in Userspace) interface, allowing the Curvine cluster to be mounted as a local file system, providing a transparent file access experience for AI/ML applications."}),"\n",(0,a.jsx)(n.h4,{id:"fuse-usage-in-aiml-training",children:"FUSE Usage in AI/ML Training"}),"\n",(0,a.jsx)(n.h5,{id:"1-deep-learning-training-data-access",children:"1. Deep Learning Training Data Access"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# PyTorch training script\nimport torch\nfrom torch.utils.data import Dataset, DataLoader\nfrom torchvision import transforms\nfrom PIL import Image\nimport os\n\nclass CurvineImageDataset(Dataset):\n    def __init__(self, root_dir, transform=None):\n        \"\"\"\n        Directly access data in Curvine through FUSE mount point\n        root_dir: FUSE mount point path, such as /curvine-fuse/datasets/imagenet\n        \"\"\"\n        self.root_dir = root_dir\n        self.transform = transform\n        self.image_paths = []\n        \n        # Directly traverse the FUSE-mounted directory\n        for class_dir in os.listdir(root_dir):\n            class_path = os.path.join(root_dir, class_dir)\n            if os.path.isdir(class_path):\n                for img_file in os.listdir(class_path):\n                    if img_file.lower().endswith(('.png', '.jpg', '.jpeg')):\n                        self.image_paths.append(os.path.join(class_path, img_file))\n    \n    def __len__(self):\n        return len(self.image_paths)\n    \n    def __getitem__(self, idx):\n        # Access data through standard file operations, enjoying Curvine cache acceleration\n        img_path = self.image_paths[idx]\n        image = Image.open(img_path).convert('RGB')\n        \n        if self.transform:\n            image = self.transform(image)\n            \n        # Extract label from path\n        label = os.path.basename(os.path.dirname(img_path))\n        return image, label\n\n# Usage example\ntransform = transforms.Compose([\n    transforms.Resize((224, 224)),\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406], \n                        std=[0.229, 0.224, 0.225])\n])\n\n# Directly use the path of the FUSE mount point\ndataset = CurvineImageDataset(\n    root_dir='/curvine-fuse/datasets/imagenet/train',\n    transform=transform\n)\n\ndataloader = DataLoader(\n    dataset, \n    batch_size=64, \n    shuffle=True, \n    num_workers=8,\n    pin_memory=True\n)\n\n# Training loop\nfor epoch in range(num_epochs):\n    for batch_idx, (data, targets) in enumerate(dataloader):\n        # Data is automatically loaded from Curvine cache through FUSE\n        # Enjoy near-memory access speed\n        outputs = model(data.cuda())\n        loss = criterion(outputs, targets.cuda())\n        # ... training logic\n"})}),"\n",(0,a.jsx)(n.h5,{id:"2-tensorflowkeras-data-pipeline",children:"2. TensorFlow/Keras Data Pipeline"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import tensorflow as tf\nimport os\n\ndef create_curvine_dataset(data_dir, batch_size=32):\n    \"\"\"\n    Create TensorFlow data pipeline through FUSE mount point\n    data_dir: FUSE-mounted data directory\n    \"\"\"\n    \n    # Directly access FUSE-mounted data using standard file APIs\n    def load_and_preprocess_image(path):\n        # TensorFlow transparently accesses Curvine cache through FUSE\n        image = tf.io.read_file(path)\n        image = tf.image.decode_jpeg(image, channels=3)\n        image = tf.image.resize(image, [224, 224])\n        image = tf.cast(image, tf.float32) / 255.0\n        return image\n    \n    # Scan files in the FUSE-mounted directory\n    image_paths = []\n    labels = []\n    \n    for class_name in os.listdir(data_dir):\n        class_dir = os.path.join(data_dir, class_name)\n        if os.path.isdir(class_dir):\n            for img_file in os.listdir(class_dir):\n                if img_file.lower().endswith(('.png', '.jpg', '.jpeg')):\n                    image_paths.append(os.path.join(class_dir, img_file))\n                    labels.append(class_name)\n    \n    # Create dataset\n    path_ds = tf.data.Dataset.from_tensor_slices(image_paths)\n    label_ds = tf.data.Dataset.from_tensor_slices(labels)\n    \n    # Apply preprocessing\n    image_ds = path_ds.map(\n        load_and_preprocess_image, \n        num_parallel_calls=tf.data.AUTOTUNE\n    )\n    \n    # Combine data and labels\n    dataset = tf.data.Dataset.zip((image_ds, label_ds))\n    \n    return dataset.batch(batch_size).prefetch(tf.data.AUTOTUNE)\n\n# Usage example\ntrain_dataset = create_curvine_dataset('/curvine-fuse/datasets/imagenet/train')\nval_dataset = create_curvine_dataset('/curvine-fuse/datasets/imagenet/val')\n\n# Model training\nmodel.fit(\n    train_dataset,\n    validation_data=val_dataset,\n    epochs=50,\n    callbacks=[\n        tf.keras.callbacks.ModelCheckpoint('/curvine-fuse/models/checkpoints/'),\n        tf.keras.callbacks.TensorBoard(log_dir='/curvine-fuse/logs/')\n    ]\n)\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"\ufe0f-big-data-ecosystem-integration",children:"\ud83d\uddc4\ufe0f Big Data Ecosystem Integration"}),"\n",(0,a.jsx)(n.p,{children:"Curvine seamlessly integrates with mainstream big data frameworks, providing transparent cache acceleration capabilities."}),"\n",(0,a.jsx)(n.h3,{id:"hadoop-ecosystem-integration",children:"Hadoop Ecosystem Integration"}),"\n",(0,a.jsx)(n.h4,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["Add in ",(0,a.jsx)(n.code,{children:"hdfs-site.xml"})," or ",(0,a.jsx)(n.code,{children:"core-site.xml"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:"\x3c!-- Curvine FileSystem implementation --\x3e\n<property>\n    <name>fs.cv.impl</name>\n    <value>io.curvine.CurvineFileSystem</value>\n</property>\n\n\x3c!-- Single cluster configuration --\x3e\n<property>\n    <name>fs.cv.master_addrs</name>\n    <value>master1:8995,master2:8995,master3:8995</value>\n</property>\n\n"})}),"\n",(0,a.jsx)(n.h4,{id:"multi-cluster-support",children:"Multi-cluster Support"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:"\x3c!-- Cluster 1: Production environment --\x3e\n<property>\n    <name>fs.cv.production.master_addrs</name>\n    <value>prod-master1:8995,prod-master2:8995,prod-master3:8995</value>\n</property>\n\n\x3c!-- Cluster 2: Development environment --\x3e\n<property>\n    <name>fs.cv.development.master_addrs</name>\n    <value>dev-master1:8995,dev-master2:8995</value>\n</property>\n\n\x3c!-- Cluster 3: Machine learning dedicated cluster --\x3e\n<property>\n    <name>fs.cv.ml-cluster.master_addrs</name>\n    <value>ml-master1:8995,ml-master2:8995,ml-master3:8995</value>\n</property>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"-ufs-transparent-proxy",children:"\ud83d\udd04 UFS Transparent Proxy"}),"\n",(0,a.jsxs)(n.p,{children:["To better support existing Java applications to seamlessly access Curvine cache, we provide a UFS transparent proxy solution. The core advantage of this solution is ",(0,a.jsx)(n.strong,{children:"zero code modification"}),", allowing existing applications to immediately enjoy the cache acceleration effects of Curvine."]}),"\n",(0,a.jsx)(n.h4,{id:"-core-features-of-transparent-proxy",children:"\u2728 Core Features of Transparent Proxy"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud83d\udeab Zero code modification"}),": Preserves all original interfaces unchanged, no business code modifications required"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud83d\udd0d Intelligent path recognition"}),": Only determines whether the path has been mounted to Curvine when opening a file"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\u26a1 Automatic cache acceleration"}),": Automatically enables cache acceleration for mounted paths, native S3 access for unmounted paths"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud83d\udd04 Smooth switching"}),": Supports dynamically switching whether to use cache at runtime without restarting the application"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"\ufe0f-configuration-method",children:"\ud83d\udee0\ufe0f Configuration Method"}),"\n",(0,a.jsx)(n.p,{children:"Simply replace the S3FileSystem implementation class in Hadoop configuration:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:"\x3c!-- Traditional S3 access configuration --\x3e\n\x3c!--\n<property>\n    <name>fs.s3a.impl</name>\n    <value>org.apache.hadoop.fs.s3a.S3AFileSystem</value>\n</property>\n--\x3e\n\n\x3c!-- Replace with Curvine transparent proxy --\x3e\n<property>\n    <name>fs.s3a.impl</name>\n    <value>io.curvine.S3AProxyFileSystem</value>\n</property>\n\n<property>\n    <name>fs.cv.impl</name>\n    <value>io.curvine.CurvineFileSystem</value>\n</property>\n\n\x3c!-- Curvine cluster configuration --\x3e\n<property>\n    <name>fs.curvine.master_addrs</name>\n    <value>master1:8995,master2:8995,master3:8995</value>\n</property>\n"})}),"\n",(0,a.jsx)(n.h4,{id:"-working-principle",children:"\ud83d\udd27 Working Principle"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Working Principle",src:s(3160).A+"",width:"993",height:"668"})}),"\n",(0,a.jsx)(n.h4,{id:"-usage-example",children:"\ud83d\ude80 Usage Example"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"No need to modify any business code, original code directly enjoys acceleration:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Business code remains completely unchanged!\nConfiguration conf = new Configuration();\nFileSystem fs = FileSystem.get(URI.create("s3a://my-bucket/"), conf);\n\n// If this path is mounted to Curvine, automatically enjoy cache acceleration\nFSDataInputStream input = fs.open(new Path("s3a://my-bucket/warehouse/data.parquet"));\n\n// If this path is not mounted, use native S3 access\nFSDataInputStream input2 = fs.open(new Path("s3a://my-bucket/archive/old-data.parquet"));\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Spark/MapReduce code example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Spark code does not need any modification\nDataset<Row> df = spark.read()\n    .option("header", "true")\n    // If /warehouse/ path is mounted, automatically use cache acceleration\n    .csv("s3a://data-lake/warehouse/customer_data/");\n    \ndf.groupBy("region")\n  .agg(sum("revenue").alias("total_revenue"))\n  .orderBy(desc("total_revenue"))\n  .show(20);\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Python PySpark example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# Python code also does not need modification\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import sum, desc\n\nspark = SparkSession.builder.appName("TransparentCache").getOrCreate()\n\n# Automatically determine whether to use cache\ndf = spark.read \\\n    .option("header", "true") \\\n    .csv("s3a://data-lake/analytics/events/")\n\nresult = df.groupBy("event_type") \\\n    .agg(sum("count").alias("total_events")) \\\n    .orderBy(desc("total_events"))\n    \nresult.show()\n'})}),"\n",(0,a.jsx)(n.h3,{id:"apache-spark-optimization-configuration",children:"Apache Spark Optimization Configuration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Spark application startup configuration\nspark-submit \\\n  --class com.example.SparkApp \\\n  --master yarn \\\n  --deploy-mode cluster \\\n  --conf spark.hadoop.fs.cv.impl=io.curvine.CurvineFileSystem \\\n  --conf spark.hadoop.fs.cv.master_addrs=master1:8995,master2:8995,master3:8995 \\\n  --conf spark.sql.adaptive.enabled=true \\\n  --jars curvine-hadoop-client.jar \\\n  app.jar\n"})}),"\n",(0,a.jsx)(n.h4,{id:"spark-code-example",children:"Spark Code Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'// Scala example\nval spark = SparkSession.builder()\n  .appName("Curvine Demo")\n  .config("spark.hadoop.fs.cv.impl", "io.curvine.CurvineFileSystem")\n  .getOrCreate()\n\n// Directly use cv:// protocol to access cached data\nval df = spark.read\n  .option("multiline", "true")\n  .json("cv://production/warehouse/events/2024/01/01/")\n\ndf.groupBy("event_type")\n  .count()\n  .show()\n\n// Multi-cluster access\nval prodData = spark.read.parquet("cv://production/warehouse/sales/")\nval mlData = spark.read.parquet("cv://ml-cluster/features/user_profiles/")\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# Python example\nfrom pyspark.sql import SparkSession\n\nspark = SparkSession.builder \\\n    .appName("Curvine Python Demo") \\\n    .config("spark.hadoop.fs.cv.impl", "io.curvine.CurvineFileSystem") \\\n    .config("spark.hadoop.fs.cv.master_addrs", "master1:8995,master2:8995") \\\n    .getOrCreate()\n\n# Read data from cache\ndf = spark.read.option("header", "true") \\\n    .csv("cv://warehouse/customer_data/")\n\n# Complex queries automatically enjoy cache acceleration\nresult = df.groupBy("region") \\\n    .agg({"revenue": "sum", "orders": "count"}) \\\n    .orderBy("sum(revenue)", ascending=False)\n\nresult.show(20)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"trinopresto-plugin-integration",children:"Trino/Presto Plugin Integration"}),"\n",(0,a.jsx)(n.p,{children:"Curvine provides an intelligent path replacement plugin, which can achieve non-invasive cache acceleration without requiring business code modifications, achieving completely transparent cache acceleration:"}),"\n",(0,a.jsx)(n.h4,{id:"plugin-workflow",children:"Plugin Workflow"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Plugin Workflow",src:s(1129).A+"",width:"1117",height:"596"})}),"\n",(0,a.jsx)(n.p,{children:"Spark plugin usage example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"spark-submit \\\n--class main.scala.Tpch \\\n--name tpch_demo \\\n--conf spark.hadoop.fs.cv.impl=io.curvine.CurvineFileSystem \\\n--conf spark.hadoop.fs.cv.default.master_addrs=master1:8995,master2:8995 \\\n--conf spark.sql.extensions=io.curvine.spark.CurvineSparkExtension \\\n"})}),"\n",(0,a.jsx)(n.h3,{id:"flink-real-time-computing-integration",children:"Flink Real-time Computing Integration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Flink Table API integration example\nTableEnvironment tableEnv = TableEnvironment.create(settings);\n\n// Configure Curvine FileSystem\nConfiguration config = new Configuration();\nconfig.setString("fs.cv.impl", "io.curvine.CurvineFileSystem");\nconfig.setString("fs.cv.master_addrs", "master1:8995,master2:8995");\n\n// Create Curvine table\ntableEnv.executeSql(\n    "CREATE TABLE user_events (" +\n    "  user_id BIGINT," +\n    "  event_type STRING," +\n    "  timestamp_ms BIGINT," +\n    "  properties MAP<STRING, STRING>" +\n    ") WITH (" +\n    "  \'connector\' = \'filesystem\'," +\n    "  \'path\' = \'cv://streaming/events/\'," +\n    "  \'format\' = \'json\'" +\n    ")"\n);\n\n// Real-time query enjoys cache acceleration\nTable result = tableEnv.sqlQuery(\n    "SELECT user_id, COUNT(*) as event_count " +\n    "FROM user_events " +\n    "WHERE timestamp_ms > UNIX_TIMESTAMP() * 1000 - 3600000 " +\n    "GROUP BY user_id"\n);\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-best-practices",children:"\ud83d\udca1 Best Practices"}),"\n",(0,a.jsx)(n.h3,{id:"-mounting-strategy-best-practices",children:"\ud83c\udfaf Mounting Strategy Best Practices"}),"\n",(0,a.jsx)(n.h4,{id:"tiered-mounting-by-business-scenarios",children:"Tiered Mounting by Business Scenarios"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Hot data: high-frequency access, using memory cache\nbin/cv mount s3://bucket/hot /bucket/hot \\\n  --storage-type=mem \\\n  --replicas=3 \\\n  --ttl-ms=1d \\\n  --ttl-action=delete\n\n# Warm data: regular access, using SSD cache\nbin/cv mount s3://bucket/warm /bucket/warm \\\n  --storage-type=ssd \\\n  --replicas=2 \\\n  --ttl-ms=7d \\\n  --ttl-action=delete\n\n\n# Cold data: low-frequency access, using disk cache\nbin/cv mount s3://bucket/cold /bucket/cold \\\n  --storage-type=disk \\\n  --replicas=1 \\\n  --ttl-ms=30d \\\n  --ttl-action=delete\n"})}),"\n",(0,a.jsx)(n.h4,{id:"optimization-by-data-type",children:"Optimization by Data Type"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Small file intensive (e.g., logs, configurations)\nbin/cv mount s3://bucket/logs /bucket/logs \\\n  --block-size=4MB \\\n  --consistency-strategy=none \n\n# Large file type (e.g., videos, models)\nbin/cv mount s3://bucket/models /bucket/models \\\n  --block-size=1GB \\\n  --consistency-strategy=always \n\n# Analytical data (e.g., Parquet)\nbin/cv mount s3://bucket/analytics /bucket/analytics \\\n  --block-size=128MB \\\n  --consistency-strategy=none \\\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-summary",children:"\ud83c\udfaf Summary"}),"\n",(0,a.jsx)(n.p,{children:"As a new generation distributed caching system, Curvine provides excellent performance improvements for modern data-intensive applications through intelligent caching strategies, strong consistency guarantees, and seamless ecosystem integration."}),"\n",(0,a.jsx)(n.h3,{id:"-core-values",children:"\ud83c\udfc6 Core Values"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud83d\ude80 Performance Improvement"}),": 10-100x access acceleration, significantly reducing data access latency"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud83d\udcb0 Cost Optimization"}),": Reduce cloud storage access costs, improve computing resource utilization"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud83d\udee1\ufe0f Data Security"}),": Multiple consistency guarantees to ensure data accuracy and integrity"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud83c\udf10 Ecosystem Friendly"}),": Seamless integration with mainstream big data and AI frameworks"]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Curvine - Make data access lightning fast \u26a1"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},6897:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/curvine-deb0b650a65e65f55f8b4799da90a348.png"},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(6540);const a={},t=i.createContext(a);function r(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);